<?xml version="1.0" encoding="UTF-8"?>

<project name="common" basedir=".">

    <property name="application.name" value="Netbase" />
	<property name="findbugs.home" value="C:\\findbugs\\findbugs-1.3.9" />

    <property name="src.dir" value="src" />
	<property name="doc.dir" value="./documentation/" />
	<property name="src.dir" value="src" />
	<property name="build-root.dir" value="build" />
	<property name="build.dir" value="${build-root.dir}/classes" />
	<property name="lib.dir" value="lib" />
	<property name="dist.dir" value="${basedir}/dist" />
	
	<property name="ilog.deploy" value="false" />
	<path id="module.classpath"/>

	
	<!-- Packaging Controls -->
	
	<property name="dist.lib.dir" value="${dist.dir}/lib" /> <!-- Use ${dist.dir}/lib to move required jars to a subfolder -->
	
	<!-- Current NB Style mmixes class and jar-->
	<!-- <property name="dist.dir" value="${basedir}/build" /> -->

	<!-- Compiler version -->
	<property name="compile.source" value="1.7" />
    <property name="compile.target" value="1.7" />
	<property name="compile.debug" value="true" />

	<!-- ILOG -->
	<!-- Location when getting all files -->
	<!-- <property name="ilog.dir" value="../ILOG Key Project" /> -->
	<!-- Location for single project -->
	<property name="ilogchart.version" value="JViews-Charts 8.500" />
	<property name="ilogmap.version" value="JViews-Maps 8.500" />
	<property name="ilog.dir" value="C:/Eclipse Workspace - Modelling 2.5/ILOG Key Project" />
	<taskdef name="jlmdeploy"
             classpath="${ilog.dir}/utils/jlm-tools.jar"
          	 classname="ilog.tools.ant.JlmDeploy" >
	</taskdef>

	<!-- SVN - Surround Files will not be included in the build/compiled jar files -->
	<property name="svn.filetype" value="MySCMServerInfo" />

		<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
			<!-- These files are only used for testing -->
			<exclude name="hamcrest-all-1.3.jar"/>
			<exclude name="junit-4.11.jar"/>
		</fileset>
	</path>
	
	<target name="copyjars">
       <copy todir="./dist/" force="true" overwrite="true">
		<path refid="module.classpath"/>
       </copy>
    </target>

	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<target name="clean" description = "Clean (delete) the target folders">
		<delete dir="${build-root.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${doc.dir}" />
		<delete dir="${junit.output.dir}" />
		<delete dir="${src-delomboked.dir}" />
	</target>

	<path id="netbase.classpath">
		 <fileset dir="${dist.dir}">
			<include name="*.jar" />
		</fileset>
	</path>
	
	<target name="build" depends="init">
		<javac destdir="${build.dir}" source="${compile.source}" nowarn="true"  target="${compile.target}" debug="${compile.debug}" deprecation="false" optimize="false" failonerror="true" includeantruntime="true" fork="true" >
			<src path="${src.dir}" />
			<exclude name="**/*.${svn.filetype}" />
			<classpath refid="compile.classpath" />
			<classpath refid="module.classpath" />
			<compilerarg line="-J-Xms128m -J-Xmx512m -XDignore.symbol.file=true" />
		</javac>
	</target>

	<target name="createjar" depends="clean,build,copyjars" description="Create Jar File for this project">
		<!-- Library Jar Manifest -->
		<copy todir="${dist.lib.dir}" force="true" overwrite="false">
			<path refid="compile.classpath" />
		</copy>
		<path id="lib.classpath">
			<fileset dir="${dist.lib.dir}">
				<include name="*.*" />
			</fileset>
		</path>
		<!-- Allows the the use of a lib folder -->
		<pathconvert property="jar.classpath" pathsep=" ">
			<path refid="lib.classpath" />
			<map from="${dist.lib.dir}" to="lib"/>
		</pathconvert>
		<!-- Netbase Jar Manifest-->
		<manifestclasspath property="nb-jar.classpath" jarfile="${dist.dir}/${ant.project.name}.jar">
			<classpath refid="netbase.classpath" />
		</manifestclasspath>

		<jar destfile="${lib.dir}/${ant.project.name}.jar">
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Class-Path" value="${jar.classpath} ${nb-jar.classpath}" />
				<attribute name="Main-Class" value="uk.co.crowderconsult.sch.ScheduledClass"/>
			</manifest>

			<fileset dir="${build.dir}" />
			<fileset dir="${src.dir}"
            		 includes="**/*.xml, **/*.properties, **/*.png"
					 excludes="build.xml,test-targets.xml,doc-targets.xml,common-targets.xml, *-fb.xml, *.${svn.filetype}" />
			<fileset dir="${basedir}"
					 includes="*.xml, *.properties, *.png"
					 excludes="build.xml,test-targets.xml,doc-targets.xml,common-targets.xml, *-fb.xml, *.${svn.filetype}" />
		</jar>
		<move file="${lib.dir}/${ant.project.name}.jar" todir="${dist.dir}" />
	</target>

	<target name="deployjar" if="${ilog.deploy}" depends="createjar" description="Deploy Ilog dependent jar file">
		<jlmdeploy products="${ilogchart.version},${ilogmap.version}"
				   application="${application.name}"
				   input="${dist.dir}/${ant.project.name}.jar"
				   output="${dist.dir}/${ant.project.name}_deployed.jar">
		<classpath>
			<pathelement location="${ilog.dir}/utils/jlm-tools.jar" />
			<pathelement location="${ilog.dir}/" />
		</classpath>
		</jlmdeploy>
		<move file="${dist.dir}/${ant.project.name}_deployed.jar" tofile="${dist.dir}/${ant.project.name}.jar" />
		</target>

	<target name="all" description="Run all ant tasks" depends="clean,copyjars,createjar,test,test-report,javadoc,javadoc-zip">
	</target>
	
	<property name="buildjars.name" value="${buildjars.location}/buildjars.zip" />
	<target name="get" description="Copy build jars from Jenkins">
      <get src="http://ccvmbuild/job/Netbase%20Snapshot%2023%20(Stable%20Branch)%20-%20Java/lastSuccessfulBuild/artifact/*zip*/archive.zip"
     	  dest="${buildjars.name}" usetimestamp="true"/>
	   <mkdir dir="${buildjars.location}"/>
	   <unzip src="${buildjars.name}" dest="${buildjars.location}" overwrite="true"/>
	   <antcall target="copyjars" />
	 </target>
</project>
